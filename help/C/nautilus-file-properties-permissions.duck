@include gnome-help.defs

= Set file permissions
  [topic .task]
@its:rules[version="1.0" xlink:type="simple" xlink:href="gnome-help.its"]

@link[guide >files#faq]
@link[seealso >nautilus-file-properties-basic]

@desc Control who can view and edit your files and folders.

@revision[pkgversion="3.6.0" version="0.2" date="2012-09-28" status="review"]

@credit[author]
  @name Tiffany Antopolski
  @email tiffany@antopolski.com
@credit[author]
  @name Shaun McCance
  @email shaunm@gnome.org
@credit[editor]
  @name Michael Hill
  @email mdhillca@gmail.com

@include[href="legal.xml" xmlns="http://www.w3.org/2001/XInclude"]

You can use file permissions to control who can view and edit files that
you own. To view and set the permissions for a file, right click it and
select $gui(Properties), then select the $gui(Permissions) tab.

See $link[>#files] and $link[>#folders] below for details on the types
of permissions you can set.


== Files
   [#files]

You can set the permissions for the file owner, the group owner,
and all other users of the system. For your files, you are the owner,
and you can give yourself read-only or read-and-write permission.
Set a file to read-only if you don’t want to accidentally change it.

Every user on your computer belongs to a group. On home computers,
it is common for each user to have their own group, and group permissions
are not often used. In corporate environments, groups are sometimes used
for departments or projects. As well as having an owner, each file belongs
to a group. You can set the file’s group and control the permissions for
all users in that group. You can only set the file’s group to a group you
belong to.

You can also set the permissions for users other than the owner and
those in the file’s group.

If the file is a program, such as a script, you must select $gui(Allow
executing file as program) to run it. Even with this option selected,
the file manager may still open the file in an application or ask you
what to do. See $link[>nautilus-behavior#executable] for more information.


== Folders
   [#folders]

You can set permissions on folders for the owner, group, and other users.
See the details of file permissions above for an explanation of owners,
groups, and other users.

The permissions you can set for a folder are different from those you
can set for a file.

[terms]
- $gui[itst:context="permission"](None)
* The user will not even be able to see what files are in the folder.

- $gui(List files only)
* The user will be able to see what files are in the folder,
  but will not be able to open, create, or delete files.

- $gui(Access files)
* The user will be able to open files in the folder (provided
  they have permission to do so on the particular file), but will
  not be able to create new files or delete files.

- $gui(Create and delete files)
* The user will have full access to the folder, including
  opening, creating, and deleting files.

You can also quickly set the file permissions for all the files
in the folder by clicking $gui(Change Permissions for Enclosed Files).
Use the drop-down lists to adjust the permissions of contained files or
folders, and click $gui(Change). Permissions are applied to files and
folders in subfolders as well, to any depth.
